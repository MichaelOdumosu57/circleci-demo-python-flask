# version: 2
# jobs:
#   build:
#     docker:
#       - image: circleci/python:3.6.2-stretch-browsers
#         environment:
#           FLASK_CONFIG: testing
#           TEST_DATABASE_URL: postgresql://ubuntu@localhost/circle_test?sslmode=disable
#       - image: circleci/postgres:9.6.5-alpine-ram
#         environment:
#           POSTGRES_USER: ubuntu
#           POSTGRES_DB: circle_test
#           POSTGRES_PASSWORD: ''
#     steps:
#       - checkout
#       - run: mkdir test-reports
#       - run:
#           name: Download Selenium
#           command: |
#             curl -O http://selenium-release.storage.googleapis.com/3.5/selenium-server-standalone-3.5.3.jar
#       - run:
#           name: Start Selenium
#           command: |
#             java -jar selenium-server-standalone-3.5.3.jar -log test-reports/selenium.log
#           background: true
#       - restore_cache:
#           key: deps2-{{ .Branch }}-{{ checksum "requirements/dev.txt" }}
#       - run:
#           command: |
#             python3 -m venv venv
#             . venv/bin/activate
#             pip install -r requirements/dev.txt
#       - run:
#           name: setup Heroku
#           command: bash .circleci/setup-heroku.sh
#       - save_cache:
#           key: deps2-{{ .Branch }}-{{ checksum "requirements/dev.txt" }}
#           paths:
#             - 'venv'
#       - run:
#           command: |
#             . venv/bin/activate
#             python manage.py test
#       - store_artifacts:
#           path: test-reports/
#           destination: tr1
#       - store_test_results:
#           path: test-reports/
#       - add_ssh_keys:
#           fingerprints:
#             - '48:a0:87:54:ca:75:32:12:c6:9e:a2:77:a4:7a:08:a4'
#       - deploy:
#           name: Deploy Master to Heroku
#           command: |
#             if [ "${CIRCLE_BRANCH}" == "master" ]; then
#               git push heroku master
#               heroku run python manage.py deploy
#               heroku restart
#             fi

#python flash tutorial#

# version: 2
# jobs:
#   build:
#     docker:
#       - image: circleci/python:3.6.2-stretch-browsers
#         environment:
#           FLASK_CONFIG: testing
#           TEST_DATABASE_URL: postgresql://root@localhost/circle_test?sslmode=disable
#       - image: circleci/postgres:9.6.5-alpine-ram
#         environment:
#           POSTGRES_USER: root
#           POSTGRES_DB: circle_test
#           POSTGRES_PASSWORD: ""
#     steps:
#       - checkout
#       - restore_cache:
#           key: deps1-{{ .Branch }}-{{ checksum "requirements/dev.txt" }}
#       - run:
#           name: Install Python deps in a venv
#           command: |
#             python3 -m venv venv
#             . venv/bin/activate
#             pip install -r requirements/dev.txt
#       - save_cache:
#           key: deps1-{{ .Branch }}-{{ checksum "requirements/dev.txt" }}
#           paths:
#             - "venv"
#       - run: mkdir test-reports
#       - run:
#           name: Download Selenium
#           command: |
#             curl -O http://selenium-release.storage.googleapis.com/3.5/selenium-server-standalone-3.5.3.jar
#       - run:
#           name: Start Selenium
#           command: |
#             java -jar selenium-server-standalone-3.5.3.jar -log test-reports/selenium.log
#           background: true
#       - run:
#           command: |
#             . venv/bin/activate
#             python manage.py test
#       - store_artifacts:
#           path: test-reports/
#           destination: tr1
#       - store_test_results:
#           path: test-reports/
#       - run:
#           name: installing git
#           command:  which git
#       - run:
#           name: Deploy Master to Heroku
#           command: |
#             git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git master
#           environment:
#             HEROKU_API_KEY: a712e197-ad8a-46e2-8fb4-c2232bd8ecd0
#             HEROKU_APP_NAME: circleci-python-flask

#dontuse #
    #  - run:
    #       name: verifying config
    #       command: echo ${FLASK_CONFIG}
    #       environment:
    #         FLASK_CONFIG: staging
#   deploy:
#     docker:
#       - image: circleci/buildpack-deps:xenial
#     steps:
#       - checkout
#       - run:
#           name: installing git
#           command:  apt-get install git
#       - run:
#           name: Deploy Master to Heroku
#           command: |
#             git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git master
#           environment:
#             HEROKU_API_KEY: a712e197-ad8a-46e2-8fb4-c2232bd8ecd0
#             HEROKU_APP_NAME: circleci-python-flask

#dont use#
#  python flask tutorial#



 #heroku orbs#
 
version: 2.1
orbs:
  heroku: circleci/heroku@1.0.0
workflows:
  heroku_deploy:
    jobs:
      - deploy
jobs:
  deploy:
    executor: heroku/default # Uses the basic buildpack-deps image, which has the prerequisites for installing heroku's CLI.
    steps:
      - checkout
      - heroku/install # Runs the heroku install command, if necessary.
      - heroku/deploy-via-git: # Deploys branch to Heroku via git push.
          only-branch: master # If you specify an only-branch, the deploy will not occur for anyother branch
          
 #heroku orbs#